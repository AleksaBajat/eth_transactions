version: "3.8"

services:
  namenode:
    image: "bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8"
    container_name: namenode
    environment:
      CLUSTER_NAME: eth
      PYSPARK_PYTHON: python3
    env_file:
      - ./hadoop.env
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
      - ./data/:/data/
    ports:
      - "9870:9870"
      - "9000:9000"

  datanode:
    image: "bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8"
    container_name: datanode
    env_file:
      - ./hadoop.env
    depends_on:
      - namenode
    volumes:
      - hadoop_datanode:/hadoop/dfs/data

  metabase:
    image: metabase/metabase:latest
    container_name: metabase
    ports:
      - "3000:3000"
    volumes:
      - metabase:/metabase-data

  mongo:
    image: mongo
    container_name: mongo
    volumes:
      - mongo:/data/db
    ports:
      - "27017:27017"

  spark_master:
    image: bde2020/spark-master:3.2.1-hadoop3.2
    container_name: spark_master
    ports:
      - "8080:8080"
    environment:
      PYSPARK_PYTHON: python3
    env_file:
      - ./hadoop.env
    volumes:
      - ./spark_scripts:/spark_scripts

  spark_worker:
    image: bde2020/spark-worker:3.2.1-hadoop3.2
    container_name: spark_worker
    depends_on:
      - spark_master
    environment:
      SPARK_MASTER: spark://spark-master:7077
    ports:
      - 8081:8081
    env_file:
      - ./hadoop.env

  kafka:
    image: confluentinc/cp-kafka:7.5.3
    container_name: kafka
    hostname: kafka
    user: root
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_RACK: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE: "false"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: /var/lib/logs/
    volumes:
      - kafka:/var/lib/kafka/data
    depends_on:
      - zookeeper

  zookeeper:
    image: zookeeper:3.9.1
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
    volumes:
      - zookeeper_data:/data
      - zookeeper_log:/datalog

  airflow:
    build: ./workflows
    container_name: airflow
    hostname: airflow
    ports:
      - "9080:9080"
    environment:
      AIRFLOW_HOME: "/app/airflow"


volumes:
  hadoop_namenode:
  hadoop_datanode:
  mongo:
  kafka:
  metabase:
  zookeeper_data:
  zookeeper_log:
